#! /usr/local/bin/bash -x

lcolour () {
    local colour_="[1;${1}m" no_colour_="[0m"
    shift
    local text_="$@"
    printf "$colour_$text_$no_colour_"
}

lred () {
    lcolour 31 "$@"
}

lgreen () {
    lcolour 32 "$@"
}

lblue () {
    lcolour 34 "$@"
}

usr_local () {
    echo "/usr/local/$1"
}

pre_bashrc_ () {
    local homes_=$HOME/jab/bin:$HOME/bin:$HOME/.local
    local locals_="$(usr_local gnu):/opt/homebrew/bin:$(usr_local bin):$(usr_local opt):$(usr_local go/bin)"
    local bins_=/usr/bin:/bin:/usr/sbin:/sbin
    local mysite_=/Users/jab/jab/src/python/site/

    local all_="$homes_:$locals_:$bins_"
    PATH=$all_; export PATH
    PYTHONPATH=$mysite_:$PYTHONPATH;

    if test -d $HOME/lib -a -n "$(find $HOME/lib -maxdepth 1 -name 'libpython*' -print -quit)"; then
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/lib
    fi
}

colour_user () {
    local _colour_username=$(lblue "${USER:-$(whoami)}")
    local _colour_host=$(lred ${HOSTNAME:-$(hostname -s)})
    echo ${_colour_username}@$_colour_host
}

colour_here () {
    lgreen $PWD
}

bashrc_source () {
    [[ -f $1 ]] || return 1
    source "$@"
}

bashrc_essential_aliases () {
    if ! type vv >/dev/null 2>&1 ; then
        if test -f $HOME/.aliases; then
            . $HOME/.aliases || source $HOME/.aliases
        else
            alias g="git"
            alias gr="grep --colour"
            alias vv="vim -p"
        fi 2>/dev/null
    fi
}

bashrc_log=$HOME/log/bashrc.log

echo_if_file () {
    [[ -f "$1" ]] || return 1
    echo "        $1"
}

bbb () {
    echo ""
    echo_if_file $HOME/.bashrc
    echo_if_file $HOME/jab/__init__.sh
    echo_if_file $HOME/jab/environ.d/__init__.sh
    echo_if_file $HOME/jab/src/bash/__init__.sh
    echo_if_file $HOME/jab/local/__init__.sh
    echo_if_file $HOME/jalanb/local/__init__.sh
    echo_if_file $HOME/.vimrc
    echo_if_file $bashrc_log 
}
    
bashrc_ () {
    # /usr/bin/say -v Anna Ich mÃ¶chte eine Maschine, die schreiben kann, wie ich kann &
    export PS1="\$? [$(colour_user):$(colour_here)]\n$ "
    bashrc_source $HOME/jab/__init__.sh || return 1
    bashrc_source $HOME/bash/prompt.sh green
    bashrc_essential_aliases
}

vbb () {
    vim -p $(bbb)
    . $(bbb)
    readlink -f $(bbb) 2>/dev/null
}

__main__ () {
    pre_bashrc_
    bashrc_
    set +m
}

[[ $- =~ i ]] && __main__  "$@" # > $bashrc_log 2>&1
