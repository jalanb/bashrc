#! /bin/bash -x

lcolour () {
    local colour_="[1;${1}m" no_colour_="[0m"
    shift
    local text_="$@"
    printf "$colour_$text_$no_colour_"
}

lred () {
    lcolour 31 "$@"
}

lgreen () {
    lcolour 32 "$@"
}

lblue () {
    lcolour 34 "$@"
}

lwhite () {
    lcolour 37 "$@"
}

lred_user () {
    local _colour_username=$(lblue "${USER:-$(whoami)}")
    local _colour_host=$(lred ${HOSTNAME:-$(hostname -s)})
    echo "${_colour_username}@$_colour_host"
}

echo_path () {
    echo "PATH is $(echo $PATH | sed -e "s,:,:    ,g" | tr ':' '\n')"
    echo "PSI is $PS1"
    echo "Here is $(readlink -f .)"
}

usr_local () {
    echo "/usr/local/$1"
}

bashrc_log=~/log/bashrc.log

jalanblink () {
    readlink -f ~/jalanb/$1
}

jablink () {
    jalanblink jab/$1
}

jab_init=$(jablink __init__.sh)

pre_bashrc_ () {
    local homes_=$(jablink bin):$HOME/bin:$HOME/.local
    local locals_="$(usr_local gnu):$(usr_local bin):$(usr_local go/bin)"
    local bins_=/usr/bin:/bin:/usr/sbin:/sbin
    local mysite_=/Users/jab/jab/src/python/site/

    local all_="$homes_:$locals_:$bins_"
    PATH=$all_; export PATH
    PYTHONPATH=$mysite_:$PYTHONPATH;

    if test -d $HOME/lib -a -n "$(find $HOME/lib -maxdepth 1 -name 'libpython*' -print -quit)"; then
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/lib
    fi
}

local_init  () {
    jablink local/__init__.sh
}

bashrc_ () {
    # echo_path
    # /usr/bin/say -v Anna Ich mÃ¶chte eine Maschine, die schreiben kann, wie ich kann &
    export PS1="\$? [$(lred_user)@\h:\$PWD]\n$ "
    [[ -f $jab_init ]] || return 1
    source $jab_init
    [[ -f $(local_init) ]] && source $(local_init)
    sp green
}

vbb () {
    (
        cd $(jablink)
        local local_= log_=
        [[ -f $(local_init) ]] && local_=$(local_init)
        [[ -f $bashrc_log ]] && log_=$bashrc_log
        local bbs_="$HOME/.bashrc __init__.sh environ.d/__init__.sh src/bash/__init__.sh $local_ $HOME/.vimrc $log_ "
        vim -p "$@" $bbs_
        readlink -f $bbs_
    )
}

__main__ () {
    pre_bashrc_
    bashrc_ 
    set +m
}

[[ $- =~ i ]] && __main__  "$@" #  > $bashrc_log 2>&1
